[[plugins]]
repo = 'toppair/peek.nvim'
build='deno task --quiet build:fast'
on_ft="md"
hooks_file='$BASE_DIR/rc/hooks/peek.lua'

[[plugins]]
on_ft="md"
repo = 'mzlogin/vim-markdown-toc'

[[plugins]]
repo="Decodetalkers/csv-tools.lua"
on_ft = "csv"
hooks_file = "$BASE_DIR/rc/hooks/csv_tools.lua"

[[plugins]]
repo = 'thinca/vim-partedit'
on_cmd = 'Partedit'
on_func = 'partedit#start'
hook_add = '''
    let g:partedit#prefix_pattern = '\s*'
    let g:partedit#auto_prefix = 0
'''

[[plugins]]
repo = "lervag/vimtex"
on_ft=['tex', 'bib']
depends=['ddc.vim']
hooks_file="$BASE_DIR/rc/hooks/vimtex.vim"

[ftplugin]
toml_markdown = '''
 setl foldmethod=expr
 setl foldexpr=<SID>fold_expr(v:lnum)

 function! s:fold_expr(lnum) abort
   let line = getline(a:lnum)
   return line ==# '' || line[0:3] ==# '    '
 endfunction
 nnoremap <buffer> <C-p> <Cmd>call <SID>operator_partedit()<CR>
 function! s:operator_partedit() abort
  let context = context_filetype#get()
  if context.range == [[0, 0], [0, 0]]
    echohl WarningMsg
    echomsg 'Context is not found'
    echohl NONE
    return
  endif
  call partedit#start(context.range[0][0], context.range[1][0],
 	   \ {'filetype': context.filetype})
  nnoremap <buffer><nowait> Q <Cmd>w<CR><Cmd>ParteditEnd<CR>
 endfunction
'''
